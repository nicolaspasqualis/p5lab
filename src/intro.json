{"projectName":"intro","nodeCount":107,"flow":{"nodes":[{"dragHandle":".node-drag-handle","id":"editor-0","type":"editor","data":{"id":"editor-0","code":"const { points, vel, bgColor, fillShape, strokeColor, angle, angleStep } = \n  p5lab.controls({\n    points: { value: 6, min: 1, max: 30 },\n    angleStep: { value: 4, min: 0, max: 360 },\n    vel: {value: 0.01, min: -0.1, max: 0.1, step: 0.001},\n    bgColor: { value: \"#fff\" },\n    strokeColor: { value: \"#000\" },\n    fillShape: { value: false },\n  })\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  angleMode(DEGREES);\n}\n\nfunction draw() {\n  background(bgColor.value);\n  stroke(strokeColor.value);\n  fillShape.value ? fill(bgColor.value) : noFill();\n\n  const centerX = width / 2;\n  const centerY = height / 2;\n  const radius = Math.min(centerX, centerY) * 0.9;\n  let angleOffset = 0;\n\n  beginShape(TRIANGLE_STRIP);\n  for (let i = 0; i <= points.value; i++) {\n    vertex(\n      centerX + cos(angleOffset) * radius,\n      centerY + sin(angleOffset) * radius,\n    );\n    angleOffset += angleStep.value;\n    vertex(\n      centerX + cos(angleOffset) * radius * 0.7,\n      centerY + sin(angleOffset) * radius * 0.7,\n    );\n    angleOffset += angleStep.value +\n      millis() * vel.value;\n  }\n  endShape();\n}"},"position":{"x":2381,"y":-1153},"width":477,"height":769,"measured":{"width":477,"height":769},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"editor-3","type":"editor","data":{"id":"editor-3","code":"const {msg} = p5lab.controls({\n  msg: { value: \"hi!\" }\n})\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\nfunction draw() {\n  background(255)\n  textSize(75)\n  text(msg.value, 20, windowHeight/1.2)\n}"},"position":{"x":-2301,"y":-1180},"width":480,"height":239,"measured":{"width":480,"height":239},"selected":false,"resizing":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"sandbox-4","type":"sandbox","data":{"id":"sandbox-4"},"position":{"x":-1660,"y":-1382},"width":519,"height":200,"measured":{"width":519,"height":200},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"controller-5","type":"controller","data":{"id":"controller-5","controller":{"msg":{"initialValue":"hi!","currentValue":"〜(￣▽￣〜)","type":"text"}}},"position":{"x":-1660,"y":-1140},"width":198,"measured":{"width":198,"height":53},"selected":false,"dragging":false,"height":53,"resizing":false},{"dragHandle":".node-drag-handle","id":"markdown-19","type":"info","data":{"id":"markdown-19","markdown":"# intro"},"position":{"x":-2300,"y":-1700},"width":1319,"height":119,"measured":{"width":1319,"height":119},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-26","type":"info","data":{"id":"info-26","markdown":"p5lab is a canvas-like interface for running, comparing and experimenting with p5.js code in the browser.\n\nIts current features aim at making algorithmic design workflows easier, with tools for executing multiple stateful instances of the same sketch, modifying parameters using GUI controls (sliders, toggles, text inputs, button triggers, etc), exporting renders, reducing the redraw loop for static designs, and others.\n\n It is recommended to get familiar with p5 and its official resources before using p5lab.\n\nCheck out the [p5js website](https://p5js.org) to learn more.\n"},"position":{"x":-2300,"y":-1540},"width":480,"height":319,"measured":{"width":480,"height":319},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"sandbox-28","type":"sandbox","data":{"id":"sandbox-28","loop":true},"position":{"x":2937,"y":-1261},"width":240,"height":240,"measured":{"width":240,"height":240},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"controller-29","type":"controller","data":{"id":"controller-29","controller":{"points":{"initialValue":6,"currentValue":30,"type":"range","min":1,"max":30},"angleStep":{"initialValue":4,"currentValue":34,"type":"range","min":0,"max":360},"vel":{"initialValue":0.01,"currentValue":0.003,"type":"range","min":-0.1,"max":0.1,"step":0.001},"bgColor":{"initialValue":"#fff","currentValue":"#bababa","type":"color"},"strokeColor":{"initialValue":"#000","currentValue":"#ffe0e0","type":"color"},"fillShape":{"initialValue":false,"currentValue":true,"type":"checkbox"}}},"position":{"x":2936,"y":-941},"width":180,"measured":{"width":180,"height":207},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"sandbox-30","type":"sandbox","data":{"id":"sandbox-30","loop":false},"position":{"x":3217,"y":-1261},"width":240,"height":240,"measured":{"width":240,"height":240},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"controller-31","type":"controller","data":{"id":"controller-31","controller":{"points":{"initialValue":6,"currentValue":19,"type":"range","min":1,"max":30},"angleStep":{"initialValue":4,"currentValue":352,"type":"range","min":0,"max":360},"vel":{"initialValue":0.01,"currentValue":0,"type":"range","min":-0.1,"max":0.1,"step":0.001},"bgColor":{"initialValue":"#fff","currentValue":"#fff","type":"color"},"strokeColor":{"initialValue":"#000","currentValue":"#ff0000","type":"color"},"fillShape":{"initialValue":false,"currentValue":false,"type":"checkbox"}}},"position":{"x":3216,"y":-941},"width":180,"measured":{"width":180,"height":207},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"sandbox-32","type":"sandbox","data":{"id":"sandbox-32","loop":false},"position":{"x":3497,"y":-1261},"width":240,"height":240,"measured":{"width":240,"height":240},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"controller-33","type":"controller","data":{"id":"controller-33","controller":{"points":{"initialValue":6,"currentValue":14,"type":"range","min":1,"max":30},"angleStep":{"initialValue":4,"currentValue":348,"type":"range","min":0,"max":360},"vel":{"initialValue":0.01,"currentValue":0,"type":"range","min":-0.1,"max":0.1,"step":0.001},"bgColor":{"initialValue":"#fff","currentValue":"#fff","type":"color"},"strokeColor":{"initialValue":"#000","currentValue":"#000000","type":"color"},"fillShape":{"initialValue":false,"currentValue":true,"type":"checkbox"}}},"position":{"x":3496,"y":-922},"width":180,"measured":{"width":180,"height":207},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-38","type":"info","data":{"id":"info-38","markdown":"#### editor\nThe editor node functions as a source code editor for p5.js sketches using JavaScript. It can connect to any number of sandbox nodes through its top-right output.\n\nThe node includes access to the `p5lab` object by default with utilities for p5lab-specific behaviour, currently used for the definition of controller input nodes in a sketch.\n\n"},"position":{"x":-741,"y":-1022},"width":479,"height":240,"measured":{"width":479,"height":240},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-39","type":"info","data":{"id":"info-39","markdown":"#### sandbox\nThe sandbox node runs code from a connected input editor node via its top-left input. It supports connections to controller nodes (when defined in the input source code) to receive live parameter values through its bottom-left input. \n\nIt also has a few utilities for code re-execution and control over the default p5 re-render loop state, which helps conserve resources for static sketches. Additionally, it can save the current sketch canvas as an image (recording video is not available yet).\n\nController changes automatically trigger a re-render to keep the output up-to-date. "},"position":{"x":99,"y":-1221},"width":478,"height":342,"measured":{"width":478,"height":342},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-40","type":"info","data":{"id":"info-40","markdown":"#### controller\nThe controller node provides interactive controls for a sandbox.  The displayed widgets are determined by the schema definition of the sandbox port to which it's connected. \n\nA single controller node can connect to multiple sandboxes and its control values can be reset to their initial state when needed."},"position":{"x":99,"y":-460},"width":480,"height":251,"measured":{"width":480,"height":251},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"editor-41","type":"editor","data":{"id":"editor-41","code":"const { radius } = p5lab.controls({\n  radius: { value: 10, min: 1, max: 100 }\n})\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  background(255);\n  circle(\n    width / 2, height / 2, \n    millis() / 10 % radius.value\n  );\n}"},"position":{"x":-741,"y":-741},"width":399,"height":319,"measured":{"width":399,"height":319},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"sandbox-42","type":"sandbox","data":{"id":"sandbox-42","loop":true},"position":{"x":-221,"y":-840},"width":360,"height":360,"measured":{"width":360,"height":360},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"controller-44","type":"controller","data":{"id":"controller-44","controller":{"radius":{"initialValue":10,"currentValue":100,"type":"range","min":1,"max":100}}},"position":{"x":-190,"y":-395},"width":180,"measured":{"width":180,"height":62},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-45","type":"info","data":{"id":"info-45","markdown":"# nodes"},"position":{"x":-740,"y":-1700},"width":1319,"height":119,"measured":{"width":1319,"height":119},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-46","type":"info","data":{"id":"info-46","markdown":"#### basic interaction\n* – Mouse-scroll to pan around the canvas.\n* – Pinch or (`ctrl` + scroll) to zoom.\n* – Click nodes' top-left corner ○ to zoom into that node.\n* – Nodes can be resized and dragged around the canvas.\n* – Changes made to this project can be saved/exported for later use.\n  \n"},"position":{"x":-2300,"y":-900},"width":479,"height":279,"measured":{"width":479,"height":279},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-47","type":"info","data":{"id":"info-47","markdown":"# controls"},"position":{"x":821,"y":-1702},"width":1318,"height":127,"measured":{"width":1318,"height":127},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"editor-48","type":"editor","data":{"id":"editor-48","code":"const { msg, radius, vel, bgColor, strokeShape, fillColor, shapeType } = \n  p5lab.controls({\n    radius: { value: 10, min: 1, max: 300 },\n    vel: {value: 0.1, min: 0, max: 1, step: 0.01},\n    bgColor: { value: \"#fff\" },\n    fillColor: { type: 'color', value: \"#000\" },\n    strokeShape: { value: false },\n    restart: { onTrigger: () => { time = 0} },\n    shapeType: { value: \"circle\", options: [\"circle\", \"rectangle\"]},\n    msg: { value: \"p5\" },\n  })\n\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n  textSize(100);\n  textAlign(CENTER, CENTER);\n  strokeWeight(8);\n  rectMode(RADIUS);\n}\n\nlet time = 0;\nfunction draw() {\n  background(bgColor.value);\n  fill(fillColor.value);\n  strokeShape.value ? stroke(\"red\") : noStroke();\n\n  (shapeType.value === 'circle' ? circle : rect)(\n    width / 2, height / 2, \n    time * vel.value % radius.value\n  );\n\n  time += deltaTime;\n  fill(bgColor.value);\n  noStroke();\n  text(msg.value, width / 2, height / 2)\n}"},"position":{"x":820,"y":-723},"width":481,"height":701,"measured":{"width":481,"height":701},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"sandbox-49","type":"sandbox","data":{"id":"sandbox-49","loop":true},"position":{"x":1421,"y":-941},"width":360,"height":360,"measured":{"width":360,"height":360},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"controller-50","type":"controller","data":{"id":"controller-50","controller":{"radius":{"initialValue":10,"currentValue":240,"type":"range","min":1,"max":300},"vel":{"initialValue":1,"currentValue":0.1,"type":"range","min":0,"max":1,"step":0.01},"bgColor":{"initialValue":"#fff","currentValue":"#ffffff","type":"color"},"fillColor":{"initialValue":"#000","currentValue":"#0011ff","type":"color"},"strokeShape":{"initialValue":false,"currentValue":false,"type":"checkbox"},"restart":{"currentValue":"restart","type":"button"},"shapeType":{"initialValue":"circle","currentValue":"circle","type":"select","options":["circle","rectangle"]},"msg":{"initialValue":"p5","currentValue":"p5","type":"text"}}},"position":{"x":1340,"y":-1540},"width":180,"measured":{"width":180,"height":250},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-51","type":"info","data":{"id":"info-51","markdown":"Each node type serves a different purpose and interface for interacting with it and communicating with other nodes."},"position":{"x":-741,"y":-1302},"width":480,"height":90,"measured":{"width":480,"height":90},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-52","type":"info","data":{"id":"info-52","markdown":"These are the basic units of p5lab. Nodes are interconnected by edges, which can be created by dragging from the • ports visible in the borders of a node. Nodes accept connections to other ports depending on their types. e.g. controllers can be connected to sandboxes.\n"},"position":{"x":-739,"y":-1541},"width":478,"height":152,"measured":{"width":478,"height":152},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-54","type":"info","data":{"id":"info-54","markdown":"In sketch code:\n```\nconst controls = p5lab.controls({\n  radius: { value: 10, min: 1, max: 300 },\n  vel: {value: 1, min: 0, max: 1, step: 0.01},\n  bgColor: { value: \"#fff\" },\n  fillColor: { value: \"#000\" },\n  strokeShape: { value: false },\n  restart: { onTrigger: () => { time = 0 } },\n  shapeType: { value: \"circle\", options: [\"circle\", \"rectangle\"]},\n  msg: { value: \"p5\" },\n})\n```"},"position":{"x":1581,"y":-1541},"width":559,"height":277,"measured":{"width":559,"height":277},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"controller-55","type":"controller","data":{"id":"controller-55","controller":{"radius":{"initialValue":10,"currentValue":240,"type":"range","min":1,"max":300},"vel":{"initialValue":0.1,"currentValue":0.1,"type":"range","min":0,"max":1,"step":0.01},"bgColor":{"initialValue":"#fff","currentValue":"#ffffff","type":"color"},"fillColor":{"initialValue":"#000","currentValue":"#0011ff","type":"color"},"strokeShape":{"initialValue":false,"currentValue":false,"type":"checkbox"},"restart":{"currentValue":"restart","type":"button"},"shapeType":{"initialValue":"circle","currentValue":"circle","type":"select","options":["circle","rectangle"]},"msg":{"initialValue":"p5","currentValue":"aloha","type":"text"}}},"position":{"x":1421,"y":-501},"width":180,"measured":{"width":180,"height":250},"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-56","type":"info","data":{"id":"info-56","markdown":"Controls can be defined in the source code of a sketch by calling the ```p5lab.controls({})``` function with an object argument specifying which values and types of controls to use. This will add a port to the sandbox running the sketch that allows for connecting a controller node.\n\n"},"position":{"x":819,"y":-1540},"width":481,"height":157,"measured":{"width":481,"height":157},"selected":false,"resizing":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-57","type":"info","data":{"id":"info-57","markdown":"The controller node matches each control definition to a suitable widget, like a slider, a toggle button, a text input, etc, but it can also be specified with the \"type\" attribute:\n\n``` \np5lab.controls({\n  colorA: { value: \"#fff\" },\n  colorB: { type: 'text', value: \"#000\" },\n})\n```\n`colorA` defaults to a `color` input while `colorB` will show as a `text` input."},"position":{"x":821,"y":-1221},"width":478,"height":263,"measured":{"width":478,"height":263},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-58","type":"info","data":{"id":"info-58","markdown":"Example of the above controller definition used in a sketch, showing all widget types currently available."},"position":{"x":821,"y":-862},"width":479,"height":88,"measured":{"width":479,"height":88},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-67","type":"info","data":{"id":"info-67","markdown":"# workflow"},"position":{"x":2379,"y":-1701},"width":1398,"height":120,"measured":{"width":1398,"height":120},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-68","type":"info","data":{"id":"info-68","markdown":"To quickly experiment in a new separate instance of a sketch, with its own controllers, you can click on the top-right button of an editor in order, which will create all nodes necessary without the need to manually drag and connect empty nodes from the toolbar menu.\n\nThe following is a simple example of what a small project in p5lab might look like\n"},"position":{"x":2380,"y":-1540},"width":478,"height":206,"measured":{"width":478,"height":206},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-72","type":"info","data":{"id":"info-72","markdown":"#### debugging\nAny console function calls in sketch code (e.g. `console.log`, `warn`, etc)  and errors thrown while a sandbox is running, will show as a message in the log viewer located in the top right corner of the window. This is useful for debugging code logic, values, and messages triggered by p5lab or the p5.js library.\n"},"position":{"x":-2300,"y":-580},"width":480,"height":219,"measured":{"width":480,"height":219},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-73","type":"info","data":{"id":"info-73","markdown":"#### saving as image\n\nThe current state of the sketch canvas can be exported as a png file by clicking the `img` button on the top bar."},"position":{"x":2380,"y":-340},"width":479,"height":140,"measured":{"width":479,"height":140},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-74","type":"info","data":{"id":"info-74","markdown":"Display nodes' dimensions, position or internal data. with the `metadata` toggle button located in the toolbar."},"position":{"x":2936,"y":-661},"width":478,"height":90,"measured":{"width":478,"height":90},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-75","type":"info","data":{"id":"info-75","markdown":"#### project export\nThe current project can be exported as a json file and later re-imported back using the export/import buttons in the tool bar."},"position":{"x":2380,"y":-159},"width":477,"height":156,"measured":{"width":477,"height":156},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"editor-76","type":"editor","data":{"id":"editor-76","code":"\nconsole.log((new Date).toString());\nconsole.warn(\"hi!\");\nthrow Error(\"ouch\");"},"position":{"x":-1781,"y":-321},"width":352,"height":117,"measured":{"width":352,"height":117},"selected":false,"dragging":false,"resizing":false},{"dragHandle":".node-drag-handle","id":"info-80","type":"info","data":{"id":"info-80","markdown":"Making changes to the source code will take effect in all running instances to connected to the editor."},"position":{"x":2380,"y":-1286},"width":478,"height":88,"measured":{"width":478,"height":88},"resizing":false,"selected":false,"dragging":false},{"dragHandle":".node-drag-handle","id":"info-83","type":"info","data":{"id":"info-83","markdown":"Executing the following code will trigger different example logs to appear in the log viewer. "},"position":{"x":-2300,"y":-320},"width":479,"height":99,"measured":{"width":479,"height":99},"selected":false,"dragging":false,"resizing":false}],"edges":[{"id":"editor-3->sandbox-4","source":"editor-3","sourceHandle":"sandbox","target":"sandbox-4","targetHandle":"code","selected":false},{"id":"controller-5->sandbox-4","source":"controller-5","sourceHandle":"sandbox","target":"sandbox-4","targetHandle":"controller","selected":false},{"id":"editor-0->sandbox-28","source":"editor-0","sourceHandle":"sandbox","target":"sandbox-28","targetHandle":"code","selected":false},{"id":"controller-29->sandbox-28","source":"controller-29","sourceHandle":"sandbox","target":"sandbox-28","targetHandle":"controller","selected":false},{"id":"editor-0->sandbox-30","source":"editor-0","sourceHandle":"sandbox","target":"sandbox-30","targetHandle":"code","selected":false},{"id":"controller-31->sandbox-30","source":"controller-31","sourceHandle":"sandbox","target":"sandbox-30","targetHandle":"controller","selected":false},{"id":"editor-0->sandbox-32","source":"editor-0","sourceHandle":"sandbox","target":"sandbox-32","targetHandle":"code","selected":false},{"id":"controller-33->sandbox-32","source":"controller-33","sourceHandle":"sandbox","target":"sandbox-32","targetHandle":"controller","selected":false},{"source":"editor-41","sourceHandle":"sandbox","target":"sandbox-42","targetHandle":"code","id":"xy-edge__editor-41sandbox-sandbox-42code","selected":false},{"id":"controller-44->sandbox-42","source":"controller-44","sourceHandle":"sandbox","target":"sandbox-42","targetHandle":"controller","selected":false},{"id":"editor-48->sandbox-49","source":"editor-48","sourceHandle":"sandbox","target":"sandbox-49","targetHandle":"code","selected":false},{"id":"controller-55->sandbox-49","source":"controller-55","sourceHandle":"sandbox","target":"sandbox-49","targetHandle":"controller","selected":false}],"viewport":{"x":774.5133779557888,"y":800.1918685536818,"zoom":0.3008904820218672}}}